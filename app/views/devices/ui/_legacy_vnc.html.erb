<%= javascript_include_tag ("/assets/dial_a_device_node/devices/"+ @device.devicetype.name) %>

<%= javascript_include_tag ("/assets/dial_a_device_node/devices/"+ @device.devicetype.name + "_UI") %>

<%= javascript_include_tag ("/assets/dial_a_device_node/devices/"+ @device.devicetype.name + "_SIM") %>

<%= javascript_include_tag ("/assets/dial_a_device_node/consolelogger.js") %>
<%= javascript_include_tag ("/assets/dial_a_device_node/systemstatus.js") %>
<%= javascript_include_tag ("/assets/dial_a_device_node/webconnection.js") %>

<script type="text/javascript">
    var devicetype = "<%= @device.devicetype.name %>"
    var operation_id = "<%= if (@operation != nil) then @operation.id end %>"
    var device_id = "<%= @device.id %>"
    var user_id = "<%= if (@current_user != nil) then  @current_user.id end %>"
    var connectiontype = "<%= @device.connectiontype %>"
    var channel_name = "channel_dev_" + device_id;
    var run_id = "<%= if (@run != nil) then @run.id end%>"

    var eventbus = new EventEmitter();

    systemstatus.init (eventbus);

    webconnection.init (eventbus, false);
    
    eventbus.emit ("device.announce.deviceid", device_id);
    eventbus.emit ("device.announce.operationid", operation_id);
    eventbus.emit ("device.announce.devicetype", devicetype);

    eventbus.emit ("webconnection.set.url", window.location.host+"/websocket");
    eventbus.emit ("webconnection.set.channelname", channel_name);

    device.init (eventbus);
    ui.init (eventbus);
    if (connectiontype == "simulation") {
      simulator.init (eventbus);
    }
    consolelogger.init (eventbus);


    eventbus.emit ("webconnection.connect");

    eventbus.on ("ui.status", function (model) {

        if (model.devicesimulation) {
            $("#connstatus").text ("Simulation mode");
            $("#connstatus").removeClass ("label-success");
            $("#connstatus").removeClass ("label-danger");
            $("#connstatus").addClass ("label-warning");
        } else {
            if (model.webconnection) {     

              if (model.deviceconnection) {

                $("#connstatus").text ("Device Connected");
                $("#connstatus").removeClass ("label-warning");
                $("#connstatus").removeClass ("label-danger");
                $("#connstatus").addClass ("label-success");

              } else {

                $("#connstatus").text ("Device Disconnected");
                $("#connstatus").removeClass ("label-success");
                $("#connstatus").removeClass ("label-warning");  
                $("#connstatus").addClass ("label-danger");
            
              }

            }
            else {

                $("#connstatus").text ("No Server Connection");
                $("#connstatus").removeClass ("label-success");
                $("#connstatus").removeClass ("label-warning");
                $("#connstatus").addClass ("label-danger");
            }
        }
    });
</script>


<%= include_novnc_javascript_all %>


<% if !(@device.token.nil?) then %>

<div id="rightbox"class="col-md-6 well">

    <a class="btn btn-success btn-xs pull-right" href="<%= showvnc_device_path (@device) %>" target="_blank">Switch to fullscreen</a>

        <div id="noVNC_screen" style="padding-top: 5px;">
                    
            <canvas id="noVNC_canvas" style="width: 100%; height: 250px;">
                    Canvas not supported.
            </canvas>

            
        </div>

        

</div>
        <script>
        /*jslint white: false */
        /*global window, $, Util, RFB, */
        "use strict";

        // Load supporting scripts

        var rfb;

        function passwordRequired(rfb) {
            var msg;
            msg = '<form onsubmit="return setPassword();"';
            msg += '  style="margin-bottom: 0px">';
            msg += 'Password Required: ';
            msg += '<input type=password size=10 id="password_input" class="noVNC_status">';
            msg += '<\/form>';
            $D('noVNC_status_bar').setAttribute("class", "noVNC_status_warn");
            $D('noVNC_status').innerHTML = msg;
        }
        function setPassword() {
            rfb.sendPassword($('#password_input').value);
            return false;
        }
        function sendCtrlAltDel() {
            rfb.sendCtrlAltDel();
            return false;
        }
        function updateState(rfb, state, oldstate, msg) {
            var s, sb, cad, level;
            // s = $D('noVNC_status');
            // sb = $D('noVNC_status_bar');
            // cad = $D('sendCtrlAltDelButton');
            switch (state) {
                case 'failed':       level = "warning";  break;
                case 'fatal':        level = "danger";  break;
                case 'normal':       level = "success"; break;
                case 'disconnected': level = "danger"; break;
                case 'loaded':       level = "success"; break;
                default:             level = "success";   break;
            }

            
            $("#vncconnstatus").removeClass ("label-*");
            
            $("#vncconnstatus").addClass ("label-"+level);
            

            if (typeof(msg) !== 'undefined') {
                $("#connstatus").text (msg);
            }
        }

        $(document).ready (function () {
            var host, port, password, path, token;

            // $('#sendCtrlAltDelButton').style.display = "inline";
            // $('#sendCtrlAltDelButton').onclick = sendCtrlAltDel;


            rfb = new RFB({'target':       $D('noVNC_canvas'),
                           'encrypt':      false,
                           'repeaterID':   '',
                           'true_color':   true,
                           'local_cursor': true,
                           'shared':       true,
                           'view_only':    true,
                           'focusContainer': $D('noVNC_canvas'),
                           'updateState':  updateState,
                           'onPasswordRequired':  passwordRequired});

            rfb.connect("<%= @device.websockifygateway %>", <%= @device.websockifygatewayport %>, "<%= @device.vncpassword %>", "?token=<%= @device.token %>");

            $("#noVNC_canvas").css ("display", "");

        });

        </script>


<% else %>

<script>

$(document).ready (function () {

    $("#vncconnstatus").removeClass ("label-*");
            
    $("#vncconnstatus").addClass ("label-default");

    $("#vncconnstatus").css ("display", "");

    $("#vncconnstatus").text ("Remote control deactivated");

});

</script>

<% end %>